// Generated by CoffeeScript 1.4.0

define(['jquery', 'kinetic', 'tools'], function($, K, tools) {
  var LevelsPage, levels;
  console.log("starting levels.coffee");
  levels = [
    {
      stars: 3,
      name: '一'
    }, {
      stars: 3,
      name: '二'
    }, {
      stars: 1,
      name: '三'
    }, {
      stars: 2,
      name: '四'
    }, {
      stars: 0,
      name: '五'
    }, {
      stars: 0,
      name: '六'
    }, {
      stars: 0,
      name: '七'
    }, {
      stars: 0,
      name: '八'
    }, {
      stars: 0,
      name: '九'
    }
  ];
  LevelsPage = (function() {

    function LevelsPage(game, layer) {
      var baseLayer, btn, buttonText, col, h, height, i, level, levelsLayer, logo, row, square, stage, w, width, x, y, _i, _j,
        _this = this;
      this.game = game;
      this.layer = layer;
      baseLayer = this.layer;
      stage = this.game.stage;
      w = stage.getWidth();
      h = stage.getHeight();
      logo = tools.createImage({
        stage: stage,
        name: 'logo',
        src: 'static/images/logo.png',
        top: 0.05,
        left: 0.0,
        width: 0.6,
        marginLeft: 0.0,
        marginTop: 0.0,
        callback: function(image) {
          baseLayer.add(image);
          return baseLayer.draw();
        }
      });
      levelsLayer = new K.Layer();
      for (row = _i = 0; _i <= 2; row = ++_i) {
        for (col = _j = 0; _j <= 2; col = ++_j) {
          i = row * 3 + col;
          console.log(i);
          if (i < levels.length) {
            level = levels[i];
            btn = new K.Group();
            width = w * 0.20;
            height = width;
            x = col * w * 0.25;
            y = row * w * 0.25;
            square = new K.Rect({
              name: "level" + i,
              x: x + (w - (2 * w * 0.25 + width)) / 2,
              y: y + h * 0.2,
              width: width,
              height: height,
              fill: "#f4f3ef",
              stroke: 'none',
              strokeWidth: 0
            });
            buttonText = new K.Text({
              x: x + (w - (2 * w * 0.25 + width)) / 2,
              y: y + h * 0.2,
              text: levels[i].name,
              fontSize: parseInt(height * 0.65),
              fontFamily: 'karatemedium',
              fontStyle: 'bold',
              fill: 'black',
              align: 'center',
              width: width,
              height: height * 1.1,
              padding: height * 0.2
            });
            tools.addShadow(square);
            btn.add(square);
            btn.add(buttonText);
            btn.on('mouseup touchup', (function(level) {
              return function() {
                return $.event.trigger("request-level-start", [level]);
              };
            })(i));
            btn.on('mouseover', function() {
              return document.body.style.cursor = 'pointer';
            });
            btn.on('mouseout', function() {
              return document.body.style.cursor = 'default';
            });
            levelsLayer.add(btn);
          }
        }
      }
      levelsLayer.draw();
      stage.add(levelsLayer);
    }

    return LevelsPage;

  })();
  console.log("returning LevelsPage class");
  return LevelsPage;
});
